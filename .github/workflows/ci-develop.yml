# This is a workflow for building and deploying staging on push to develop

name: Check-in develop

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  push:
    branches: [ develop ]
  workflow_call:
    inputs:
      image_list:
        description: List of dokcer images to rebuild (JSON-serialized)
        type: string
        default: '[]'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Environment common for all steps
    env:
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
      GITHUB_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      DATABASE_URL: ${{ secrets.SADIST_DATABASE_URL_STAGING }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out sadist-ci under $GITHUB_WORKSPACE
    - uses: actions/checkout@v2
      with:
        repository: ilyaukin/sadist-ci
        token: ${{ secrets.ACCESS_TOKEN }}

    # Sets up docker certificates
    - name: Dump secrets
      run: |
        echo -e "${{ secrets.AWS_SSH_KEY }}" > aws_my_handicapped_pet
        echo -e "${{ secrets.AWS_SSH_KEY_PUB }}" > aws_my_handicapped_pet.pub
        echo -e "${{ secrets.SADIST_DOT_ENV }}" > .env

    - name: Set up terraform CLI
      uses: hashicorp/setup-terraform@v3

    # Runs terraform
    - name: Terraform init, plan and apply
      run: |
        set -x
        terraform init
        terraform apply -auto-approve -var='image_list=${{ github.event.inputs.image_list || '[]' }}' -var='env=staging'
